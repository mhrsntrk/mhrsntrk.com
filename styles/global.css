@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
  html, body {
    font-family: "lores-9-plus-narrow", system-ui, sans-serif !important;
    font-display: swap;
  }
  
  /* Apply font to all text elements using Typekit class */
  h1, h2, h3, h4, h5, h6, p, span, div, a, button, input, textarea, select, label {
    font-family: "lores-9-plus-narrow", system-ui, sans-serif !important;
  }
  
  /* Use Typekit class for better compatibility */
  .tk-lores-9-plus-narrow {
    font-family: "lores-9-plus-narrow", sans-serif !important;
  }
}

::selection {
  background-color: #ef4444;
  color: #fefefe;
}

html {
  min-width: 360px;
  scroll-behavior: smooth;
}

#__next {
  display: flex;
  flex-direction: column;
  min-height: 100vh;
}

.sticky-nav {
  position: sticky;
  z-index: 10;
  top: 0;
  backdrop-filter: saturate(180%) blur(20px);
  transition: background-color 0.1 ease-in-out;
}

.prose pre {
  @apply relative pt-12 text-gray-800 border border-gray-200 bg-gray-50 dark:border-gray-700 dark:bg-gray-900;
  overflow: visible;
}

/* Keep copy button fixed; let only inner code scroll */
.prose pre > code {
  display: block;
  overflow: auto;
}

.prose code {
  @apply text-gray-800 dark:text-gray-200 px-1 py-0.5 border border-gray-100 dark:border-gray-800 rounded-md bg-gray-100 dark:bg-gray-900;
}

.prose img {
  /* Don't apply styles to next/image */
  @apply m-0;
}

.token.comment,
.token.prolog,
.token.doctype,
.token.cdata {
  @apply text-gray-700 dark:text-gray-300;
}

.token.punctuation {
  @apply text-gray-700 dark:text-gray-300;
}

.token.property,
.token.tag,
.token.boolean,
.token.number,
.token.constant,
.token.symbol,
.token.deleted {
  @apply text-green-500;
}

.token.selector,
.token.attr-name,
.token.string,
.token.char,
.token.builtin,
.token.inserted {
  @apply text-purple-500;
}

.token.operator,
.token.entity,
.token.url,
.language-css .token.string,
.style .token.string {
  @apply text-yellow-500;
}

.token.atrule,
.token.attr-value,
.token.keyword {
  @apply text-blue-500;
}

.token.function,
.token.class-name {
  @apply text-pink-500;
}

.token.regex,
.token.important,
.token.variable {
  @apply text-yellow-500;
}

/* Hide scrollbars for inner scroll area of code blocks */
.prose pre > code::-webkit-scrollbar { display: none; }
.prose pre > code { -ms-overflow-style: none; scrollbar-width: none; }

.mdx-marker {
  @apply block px-4 -mx-4 bg-gray-100 border-l-4 border-blue-500 dark:bg-gray-800;
}

/* Remove Safari input shadow on mobile */
input[type='text'],
input[type='email'] {
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
}

.metric-card > p {
  @apply my-2;
}

.step > h3 {
  @apply my-0;
}

/* On mouse-over, add a grey background color */
.check-box:hover input ~ .checkmark {
  background-color: #acacac;
}

/* When the checkbox is checked, add a blue background */
.check-box input:checked ~ .checkmark {
  background-color: #ef4444;
}

/* Create the checkmark/indicator (hidden when not checked) */
.checkmark:after {
  content: '';
  position: absolute;
  display: none;
}

/* Show the checkmark when checked */
.check-box input:checked ~ .checkmark:after {
  display: block;
}

:focus-visible {
  outline: #ef4444 auto 1px;
}

/* Pixel Animation Styles */
.pixel-animation-container {
  display: flex;
  justify-content: center;
  align-items: center;
  margin: 1rem 0 2rem 0;
  width: 100%;
}

.pixel-grid {
  display: grid;
  grid-template-columns: repeat(96, 1fr);
  grid-template-rows: repeat(32, 1fr);
  gap: 1px;
  padding: 0;
  background: transparent;
  border-radius: 0;
  box-shadow: none;
  opacity: 0;
  transform: scale(0.95);
  transition: opacity 0.6s ease-out, transform 0.6s ease-out;
  width: 100%;
  max-width: 100%;
  aspect-ratio: 96/32;
  contain: layout style paint;
}

.pixel-grid-visible {
  opacity: 1;
  transform: scale(1);
}

.pixel-dot {
  width: 100%;
  height: 100%;
  border-radius: 50%;
  background: #404040;
  opacity: 0.8;
  transition: transform 0.3s ease-out, opacity 0.3s ease-out;
  will-change: transform;
  transform: translateZ(0);
}

/* Simple theme inversion - colors are handled in JavaScript */

/* Simplified popping animation */
.pixel-dot.pixel-pop {
  animation: simplePop 1.5s ease-out;
}

@keyframes simplePop {
  0% { transform: scale(1) translateZ(0); }
  50% { transform: scale(1.2) translateZ(0); }
  100% { transform: scale(1) translateZ(0); }
}

/* Simplified ripple effect */
.pixel-dot.pixel-ripple {
  animation: simpleRipple 1s ease-out;
}

@keyframes simpleRipple {
  0% { transform: scale(1) translateZ(0); }
  50% { transform: scale(1.05) translateZ(0); }
  100% { transform: scale(1) translateZ(0); }
}

/* Responsive adjustments */
@media (max-width: 768px) {
  .pixel-grid {
    gap: 1px;
  }
}

/* Masonry grid (Tailwind v2-compatible) */
.masonry {
  column-count: 1;
  column-gap: 1rem; /* ~gap-4 */
  column-fill: balance;
}
@media (min-width: 640px) { /* sm */
  .masonry { column-count: 2; }
}
@media (min-width: 1024px) { /* lg */
  .masonry { column-count: 3; }
}
@media (min-width: 1280px) { /* xl */
  .masonry { column-count: 4; }
}
.masonry-item {
  break-inside: avoid;
  -webkit-column-break-inside: avoid;
  page-break-inside: avoid;
  margin-bottom: 1rem; /* ~mb-4 */
}

/* Lightbox sizing (Tailwind v2-compatible) */
.lightbox-container {
  width: 90vw;
  height: 80vh;
  position: relative; /* required for next/image fill */
  margin-left: auto;
  margin-right: auto;
}

/* Backdrop overlay (Tailwind v2-compatible) */
.lightbox-backdrop {
  background: rgba(0, 0, 0, 0.8);
  -webkit-backdrop-filter: blur(4px);
  backdrop-filter: blur(4px);
}

/* Discourage saving/downloading images (cannot fully prevent) */
.no-save {
  -webkit-user-drag: none;
  user-select: none;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  -webkit-touch-callout: none; /* iOS long-press menu */
}

@media (max-width: 480px) {
  .pixel-grid {
    gap: 1px;
  }
}
